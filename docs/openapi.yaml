openapi: 3.0.3
info:
  title: Geospatial API (NDVI + DEM)
  version: 1.0.0
  description: |
    Backend API to compute NDVI time series and retrieve Copernicus DEM cutouts via openEO.

    - Auth towards openEO is handled server-side; these endpoints don't require client auth by default.
    - DEM collections: GLO-30, GLO-90 (open), EEA-10 (restricted).
    - DEM data is returned in JSON format only.

    References:
    - openEO Authentication: https://openeo.org/documentation/1.0/developers/api/reference.html#section/Authentication
    - Copernicus DEM overview: https://dataspace.copernicus.eu/explore-data/data-collections/copernicus-contributing-missions/collections-description/COP-DEM
servers:
  - url: http://localhost:3000
    description: Local dev server
  - url: https://ndvi-time-series-js-api.onrender.com
    description: Production server
tags:
  - name: NDVI
    description: Normalized Difference Vegetation Index
  - name: DEM
    description: Digital Elevation Model
paths:
  /:
    get:
      summary: API root
      tags: [NDVI]
      responses:
        "200":
          description: Root information
          content:
            application/json:
              schema:
                type: object
  /ndvi/health:
    get:
      summary: Health check
      tags: [NDVI]
      responses:
        "200":
          description: Service health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  timestamp:
                    type: string
                    format: date-time
  /ndvi/timeseries:
    post:
      summary: Get NDVI time series aggregated over a polygon
      description: Computes NDVI from Sentinel-2 over a date range and aggregates values over the provided polygon.
      tags: [NDVI]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NDVITimeseriesRequest"
            examples:
              sample:
                value:
                  start_date: "2023-06-01"
                  end_date: "2023-06-30"
                  coordinates:
                    - [
                        [-3.80, 40.45],
                        [-3.70, 40.50],
                        [-3.60, 40.47],
                        [-3.80, 40.45],
                      ]
      responses:
        "200":
          description: NDVI time series result
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
              examples:
                generic:
                  value:
                    ndvi_mean: 0.42
        "400":
          $ref: "#/components/responses/ValidationError"
        "500":
          $ref: "#/components/responses/ServerError"
  /dem/clip:
    post:
      summary: Get DEM cutout for a polygon/bbox
      description: |
        Returns a clipped DEM raster for the area of interest in JSON format.
        - product: GLO-30 (default), GLO-90, or EEA-10 (restricted).
        - format: JSON only (elevation data with statistics and metadata).

        **JSON Response Format:**
        - elevationPoints: Array of {x, y, elevation} coordinate points
        - statistics: Summary statistics (min, max, mean, median, stddev)
        - metadata: Grid information and coordinate bounds
        - rawData: Original OpenEO response data
      tags: [DEM]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DEMClipRequest"
            examples:
              json:
                value:
                  coordinates:
                    - [
                        [-3.80, 40.45],
                        [-3.70, 40.50],
                        [-3.60, 40.47],
                        [-3.80, 40.45],
                      ]
                  product: GLO-30
                  format: JSON
      responses:
        "200":
          description: DEM cutout as JSON data with elevation points and statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  elevationPoints:
                    type: array
                    description: Array of elevation points in user-friendly format
                    items:
                      type: object
                      properties:
                        x:
                          type: number
                          description: Longitude coordinate
                        y:
                          type: number
                          description: Latitude coordinate
                        elevation:
                          type: number
                          description: Elevation in meters
                  statistics:
                    type: object
                    properties:
                      min:
                        type: number
                        description: Minimum elevation in meters
                      max:
                        type: number
                        description: Maximum elevation in meters
                      mean:
                        type: number
                        description: Average elevation in meters
                      median:
                        type: number
                        description: Median elevation in meters
                      stddev:
                        type: number
                        description: Standard deviation
                      count:
                        type: integer
                        description: Number of valid elevation points
                      units:
                        type: string
                        description: Unit of measurement
                  rawData:
                    type: object
                    description: Original raw data from OpenEO
                description: Transformed elevation data with user-friendly coordinate points
              example:
                success: true
                elevationPoints:
                  - x: 5.053693
                    y: 51.217015
                    elevation: 21.06
                  - x: 5.053970
                    y: 51.217015
                    elevation: 20.63
                  - x: 5.054248
                    y: 51.217015
                    elevation: 20.47
                statistics:
                  min: 19.5
                  max: 39.75
                  mean: 22.84
                  median: 21.73
                  stddev: 3.21
                  count: 1071
                  units: "meters"
        "400":
          $ref: "#/components/responses/ValidationError"
        "500":
          $ref: "#/components/responses/ServerError"
components:
  schemas:
    Coordinate:
      type: array
      description: [longitude, latitude]
      items:
        type: number
      minItems: 2
      maxItems: 2
    LinearRing:
      type: array
      items:
        $ref: "#/components/schemas/Coordinate"
      minItems: 3
    NDVITimeseriesRequest:
      type: object
      required: [start_date, end_date, coordinates]
      properties:
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        coordinates:
          type: array
          description: First ring of a polygon as an array of coordinates [lon,lat].
          items:
            $ref: "#/components/schemas/LinearRing"
    DEMClipRequest:
      type: object
      required: [coordinates]
      properties:
        coordinates:
          type: array
          description: First ring of a polygon as an array of coordinates [lon,lat].
          items:
            $ref: "#/components/schemas/LinearRing"
        product:
          type: string
          enum: [GLO-30, GLO-90, EEA-10]
          default: GLO-30
        format:
          type: string
          enum: [JSON]
          default: JSON
  responses:
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              details:
                type: array
                items:
                  type: string
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
